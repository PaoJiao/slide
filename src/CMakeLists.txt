find_package(PkgConfig)
pkg_check_modules(Cairo cairo)

add_library(slide-core INTERFACE)
target_include_directories(slide-core INTERFACE ${CMAKE_CURRENT_SOURCE_DIR} ${Cairo_INCLUDE_DIRS})
target_link_libraries(slide-core INTERFACE ${Cairo_LIBRARIES})

add_library(webview INTERFACE)
target_include_directories(webview INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}")
if(APPLE)
	target_compile_definitions(webview INTERFACE "-DWEBVIEW_COCOA=1")
	target_compile_options(webview INTERFACE "-x" "objective-c")
	target_link_libraries(webview INTERFACE "-framework Cocoa" "-framework WebKit")
elseif(WIN32)
	target_compile_definitions(webview INTERFACE "-DWEBVIEW_WINAPI=1")
	target_link_libraries(webview INTERFACE ole32 comctl32 oleaut32 uuid)
else()
	target_compile_definitions(webview INTERFACE "-DWEBVIEW_GTK=1")
	find_package(PkgConfig REQUIRED)
	pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
	pkg_check_modules(WEBKIT REQUIRED webkitgtk-3.0)
	target_include_directories(webview INTERFACE ${GTK3_INCLUDE_DIRS} ${WEBKIT_INCLUDE_DIRS} ${PROJECT_SOURCE_DIR})
	target_link_libraries(webview INTERFACE ${GTK3_LIBRARIES} ${WEBKIT_LIBRARIES})
endif()

add_library(json INTERFACE)
target_include_directories(json INTERFACE ${CMAKE_CURRENT_SOURCE_DIR} ${Cairo_INCLUDE_DIRS})

add_executable(slide WIN32 main.cpp)
target_link_libraries(slide PRIVATE slide-core webview json)
